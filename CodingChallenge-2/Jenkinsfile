pipeline {
     agent any
     triggers{
         pollSCM('* * * * *')
     }
    tools{
        maven 'Maven'
        jdk 'jdk'
    }
    stages{
          stage('Fetch') {
            steps {
               sh 'echo $JOB_NAME'
                sh 'echo $BUILD_NUMBER'
                sh 'echo Fetch'
               git 'https://github.com/roshenreji/SpringChallenge.git'
            }
        }
        
        stage('Clean'){
            steps{
                
                    sh 'echo  Clean'
                    sh 'mvn -f CodingChallenge-2 clean'
                
            }
        }
        stage('Validate'){
                steps{
                 
                
                        sh 'mvn -f CodingChallenge-2 validate'
                    
                }
            
         }
        stage('Compile'){
                steps{
                    
                 
                        sh 'echo  Compile'
                         sh 'mvn -f CodingChallenge-2 compile'
                     
                }
            
        }
        
        
             stage('Test'){
                 steps {
                     
                         sh 'echo Test'
                         sh 'mvn -f CodingChallenge-2 test'
                      }
             
                 post{
                     always {
                         junit '**CodingChallenge-2/target/surefire-reports/TEST-*.xml'
                     }
                 }
            }

            stage('Sonar Analysis'){
            steps{
                 
                    withSonarQubeEnv('sonar-server'){
                        withMaven(maven:'Maven'){
                            sh 'mvn -f CodingChallenge-2 sonar:sonar'
                        
                        
                  
                }
            }
            }
        }

        stage('SonarQube Quality Gate') { 
            steps{
                timeout(time: 1, unit: 'HOURS') { 
                    script{
                        def qg = waitForQualityGate() 
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                         }
                    }
                    
                }
            }
        }
            stage('Build'){
            steps {
                 
                
                        sh 'echo Build'
                        sh 'mvn -f CodingChallenge-2 package -Dbuild.number=-${BUILD_NUMBER}'
                 
            }
            
            post {
                always {
                    //junit '**/target/surefire-reports/TEST-*.xml'
                    archiveArtifacts 'CodingChallenge-2/target/*.jar'
                     }
                }
             }

             
            stage('collect artifact'){
                steps{
                    archiveArtifacts artifacts: 'CodingChallenge-2/target/*.jar', followSymlinks: false
                 }
            }      
       
    }
    post{
        success{
            echo 'I succeeded!'
            mail to:'sreelakshmilucky14@gmail.com',
            subject:"Pipeline Succeeded: ${currentBuild.fullDisplayName}",
            body:"Built is success with ${env.BUILD_URL}"

             rtUpload (
                    serverId: 'JfrogId',
                    spec: '''{
                    "files": [
                         {
                             "pattern": "CodingChallenge-2/target/*.jar",
                             "target": "art-doc-dev-loc"
                        }
                     ]
                }''',
 )


rtDownload (
                    serverId: 'artifactory-server',
                    spec: '''{
                    "files": [
                         {
                             "pattern": "art-doc-dev-loc/CodingChallenge-2",
                             "target": "C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/CodingChallengeRoshen-2/"
                        }
                     ]
                }''',
 
  
    buildName: 'Build2',
    buildNumber: '1'
)

   
            sshagent(['88937939-1f6c-4ce3-abf3-4596f847bc3b']){
                    sh 'ssh -r C:/Windows/System32/config/systemprofile/AppData/Local/Jenkins/.jenkins/workspace/CodingChallengeRoshen-2/target/*.jar ubuntu@34.212.236.92:/home/ubuntu/artifacts'
        }
        }
        failure{
            echo 'I failed!'
            mail to:'sreelakshmilucky14@gmail.com',
            subject:"Pipeline Failed: ${currentBuild.fullDisplayName}",
            body:"Built is failed with ${env.BUILD_URL}"
        }

    }

}
